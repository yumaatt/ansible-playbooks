- name: install anyenv
  git: repo=https://github.com/riywo/anyenv dest=~/.anyenv update=no

- name: anyenv plugins directory
  file: path=~/.anyenv/plugins state=directory mode=0775

- name: anyenv plugins
  git: repo=https://github.com/znz/{{ item }}.git dest=~/.anyenv/plugins/{{ item }} update=no
  with_items: anyenv_plugins

- name: anyenv envs directory
  file: path=~/.anyenv/envs state=directory mode=0775

- name: anyenv install envs
  command: creates=~/.anyenv/envs/{{ item }} ~/.anyenv/bin/anyenv install {{ item }}
  with_items: anyenv

- name: install python
  command: creates=~/.anyenv/envs/pyenv/versions/{{ item }} ~/.anyenv/envs/pyenv/bin/pyenv install {{ item }}
  with_items: python_versions

- name: check python version
  shell: cat ~/.anyenv/envs/pyenv/version
  changed_when: false
  ignore_errors: yes
  register: pyenv_python_version

- name: set python version
  command: ~/.anyenv/envs/pyenv/bin/pyenv global {{ python_version }}
  when: pyenv_python_version is defined and pyenv_python_version.stdout != '{{ python_version }}'

- name: install ruby
  command: creates=~/.anyenv/envs/rbenv/versions/{{ item }} ~/.anyenv/envs/rbenv/bin/rbenv install {{ item }}
  with_items: ruby_versions

- name: check ruby version
  shell: cat ~/.anyenv/envs/rbenv/version
  changed_when: false
  ignore_errors: yes
  register: rbenv_ruby_version

- name: set ruby version
  command: ~/.anyenv/envs/rbenv/bin/rbenv global {{ ruby_version }}
  when: rbenv_ruby_version is defined and rbenv_ruby_version.stdout != '{{ ruby_version }}'

- name: install perl
  command: creates=~/.anyenv/envs/plenv/versions/{{ item }} ~/.anyenv/envs/plenv/bin/plenv install {{ item }}
  with_items: perl_versions

- name: check perl version
  shell: cat ~/.anyenv/envs/plenv/version
  changed_when: false
  ignore_errors: yes
  register: plenv_perl_version

- name: set perl version
  command: ~/.anyenv/envs/plenv/bin/plenv global {{ perl_version }}
  when: plenv_perl_version is defined and plenv_perl_version.stdout != '{{ perl_version }}'

- name: install nodejs
  command: creates=~/.anyenv/envs/ndenv/versions/{{ item }} ~/.anyenv/envs/ndenv/bin/ndenv install {{ item }}
  with_items: nodejs_versions

- name: check nodejs version
  shell: cat ~/.anyenv/envs/ndenv/version
  changed_when: false
  ignore_errors: yes
  register: ndenv_nodejs_version

- name: set nodejs version
  command: ~/.anyenv/envs/ndenv/bin/ndenv global {{ nodejs_version }}
  when: ndenv_nodejs_version is defined and ndenv_nodejs_version.stdout != '{{ nodejs_version }}'

- name: install go
  command: creates=~/.anyenv/envs/goenv/versions/{{ item }} ~/.anyenv/envs/goenv/bin/goenv install {{ item }}
  with_items: go_versions

- name: check go version
  shell: cat ~/.anyenv/envs/goenv/version
  changed_when: false
  ignore_errors: yes
  register: goenv_go_version

- name: set go version
  command: ~/.anyenv/envs/goenv/bin/goenv global {{ go_version }}
  when: goenv_go_version is defined and goenv_go_version.stdout != '{{ go_version }}'
